import React, { useState } from 'react';
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
import { Progress } from "@/components/ui/progress";
import { Trophy, TrendingUp, Activity, Download, Target, Users, ArrowUp } from 'lucide-react';
import { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer, BarChart, Bar, RadialBarChart, RadialBar } from 'recharts';

// Sample data structure
const performanceData = {
  currentMonth: "January",
  ppo: 85,
  ppg: 78,
  totalScore: 82.9, // 70% PPO + 30% PPG
  products: {
    PRV: { attainment: 90, weight: 0.25, payout: 95, trend: [80, 85, 88, 90] },
    NOX: { attainment: 75, weight: 0.20, payout: 80, trend: [70, 72, 74, 75] },
    LAG: { attainment: 85, weight: 0.20, payout: 88, trend: [75, 80, 82, 85] },
    ZBX: { attainment: 82, weight: 0.15, payout: 85, trend: [70, 75, 80, 82] },
    PIF: { attainment: 88, weight: 0.10, payout: 92, trend: [75, 80, 85, 88] },
    IS: { attainment: 80, weight: 0.10, payout: 83, trend: [70, 75, 78, 80] }
  },
  ppgMetrics: {
    activityPerformance: { value: 85, rank: 3, totalMRs: 20 },
    sotFacilityRate: { value: 78, rank: 5, totalMRs: 20 },
    sotFirstPrescriptionRate: { value: 92, rank: 1, totalMRs: 20 },
    presentationRate: { value: 88, rank: 2, totalMRs: 20 }
  },
  peerComparison: {
    averagePPO: 75,
    topQuartilePPO: 85,
    yourRank: 3,
    totalPeers: 20
  }
};

const Dashboard = () => {
  const [activeTab, setActiveTab] = useState("overview");

  const MetricCard = ({ title, value, icon, color, subtext }) => (
    <Card className="bg-white">
      <CardContent className="p-6">
        <div className="flex items-center justify-between">
          <div>
            <p className="text-sm text-gray-500">{title}</p>
            <h3 className="text-2xl font-bold mt-1">{value}%</h3>
            {subtext && <p className="text-xs text-gray-500 mt-1">{subtext}</p>}
          </div>
          <div className={`p-3 rounded-full ${color}`}>
            {icon}
          </div>
        </div>
      </CardContent>
    </Card>
  );

  const ProductCard = ({ product, data }) => (
    <Card className="bg-white">
      <CardContent className="p-4">
        <div className="flex justify-between items-center mb-2">
          <h3 className="font-bold">{product}</h3>
          <span className="text-sm text-gray-500">Weight: {data.weight * 100}%</span>
        </div>
        <div className="space-y-2">
          <div className="flex justify-between text-sm">
            <span>Attainment</span>
            <span className="font-medium">{data.attainment}%</span>
          </div>
          <Progress value={data.attainment} className="h-2" />
          <div className="flex justify-between text-sm">
            <span>Payout Rate</span>
            <span className={`font-medium ${data.payout >= data.attainment ? 'text-green-500' : 'text-red-500'}`}>
              {data.payout}%
            </span>
          </div>
        </div>
      </CardContent>
    </Card>
  );

  return (
    <div className="p-6 bg-gray-50 min-h-screen">
      <div className="max-w-7xl mx-auto">
        {/* Header */}
        <div className="flex justify-between items-center mb-6">
          <div>
            <h1 className="text-3xl font-bold text-gray-900">Performance Dashboard</h1>
            <p className="text-gray-500">Track your progress and maximize your impact</p>
          </div>
          <button className="flex items-center gap-2 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700">
            <Download size={16} />
            Download Report
          </button>
        </div>

        {/* Achievement Score */}
        <Card className="mb-6 bg-gradient-to-r from-blue-500 to-purple-600 text-white">
          <CardContent className="p-6">
            <div className="flex items-center justify-between">
              <div>
                <h2 className="text-lg font-medium opacity-90">Total Achievement Score</h2>
                <p className="text-4xl font-bold mt-2">{performanceData.totalScore}%</p>
                <p className="text-sm mt-2 opacity-75">Based on 70% PPO and 30% PPG</p>
              </div>
              <div className="text-right">
                <div className="flex items-center gap-2 justify-end">
                  <ArrowUp className="text-green-300" size={20} />
                  <span className="text-green-300">+5% from last month</span>
                </div>
                <p className="text-sm mt-2 opacity-75">Keep pushing! You're in the top 15%</p>
              </div>
            </div>
          </CardContent>
        </Card>

        {/* Key Metrics */}
        <div className="grid grid-cols-1 md:grid-cols-3 gap-6 mb-6">
          <MetricCard 
            title="PPO Score" 
            value={performanceData.ppo}
            icon={<Trophy className="text-yellow-500" size={24} />}
            color="bg-yellow-100"
            subtext="70% of total evaluation"
          />
          <MetricCard 
            title="PPG Score" 
            value={performanceData.ppg}
            icon={<Activity className="text-blue-500" size={24} />}
            color="bg-blue-100"
            subtext="30% of total evaluation"
          />
          <MetricCard 
            title="Peer Ranking" 
            value={`${performanceData.peerComparison.yourRank}/${performanceData.peerComparison.totalPeers}`}
            icon={<Users className="text-purple-500" size={24} />}
            color="bg-purple-100"
            subtext="Within your region"
          />
        </div>

        {/* Main Content */}
        <Tabs value={activeTab} onValueChange={setActiveTab} className="space-y-4">
          <TabsList className="bg-white p-1 rounded-lg">
            <TabsTrigger value="overview">Overview</TabsTrigger>
            <TabsTrigger value="products">Products</TabsTrigger>
            <TabsTrigger value="ppg">PPG Metrics</TabsTrigger>
            <TabsTrigger value="comparison">Peer Comparison</TabsTrigger>
          </TabsList>

          {/* Products Tab */}
          <TabsContent value="products" className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
            {Object.entries(performanceData.products).map(([product, data]) => (
              <ProductCard key={product} product={product} data={data} />
            ))}
          </TabsContent>

          {/* PPG Metrics Tab */}
          <TabsContent value="ppg" className="space-y-6">
            <Card>
              <CardHeader>
                <CardTitle>PPG Performance Metrics</CardTitle>
              </CardHeader>
              <CardContent className="space-y-6">
                <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                  <div className="space-y-4">
                    <h3 className="font-medium">アクティビティパフォーマンス</h3>
                    <Progress value={performanceData.ppgMetrics.activityPerformance.value} />
                    <p className="text-sm text-gray-500">Rank: {performanceData.ppgMetrics.activityPerformance.rank}/{performanceData.ppgMetrics.activityPerformance.totalMRs}</p>
                  </div>
                  <div className="space-y-4">
                    <h3 className="font-medium">SOT(処方可能施設率)</h3>
                    <Progress value={performanceData.ppgMetrics.sotFacilityRate.value} />
                    <p className="text-sm text-gray-500">Rank: {performanceData.ppgMetrics.sotFacilityRate.rank}/{performanceData.ppgMetrics.sotFacilityRate.totalMRs}</p>
                  </div>
                  <div className="space-y-4">
                    <h3 className="font-medium">SOT(初回処方確認率)</h3>
                    <Progress value={performanceData.ppgMetrics.sotFirstPrescriptionRate.value} />
                    <p className="text-sm text-gray-500">Rank: {performanceData.ppgMetrics.sotFirstPrescriptionRate.rank}/{performanceData.ppgMetrics.sotFirstPrescriptionRate.totalMRs}</p>
                  </div>
                  <div className="space-y-4">
                    <h3 className="font-medium">説明会実施率(評価対象回数)</h3>
                    <Progress value={performanceData.ppgMetrics.presentationRate.value} />
                    <p className="text-sm text-gray-500">Rank: {performanceData.ppgMetrics.presentationRate.rank}/{performanceData.ppgMetrics.presentationRate.totalMRs}</p>
                  </div>
                </div>
              </CardContent>
            </Card>
          </TabsContent>

          {/* Peer Comparison Tab */}
          <TabsContent value="comparison" className="space-y-6">
            <Card>
              <CardHeader>
                <CardTitle>Performance Distribution</CardTitle>
              </CardHeader>
              <CardContent>
                <div className="h-64">
                  <ResponsiveContainer width="100%" height="100%">
                    <RadialBarChart 
                      innerRadius="30%" 
                      outerRadius="100%" 
                      data={[
                        { name: 'Your PPO', value: performanceData.ppo, fill: '#FDB022' },
                        { name: 'Top Quartile', value: performanceData.peerComparison.topQuartilePPO, fill: '#94A3B8' },
                        { name: 'Average', value: performanceData.peerComparison.averagePPO, fill: '#E2E8F0' }
                      ]} 
                      startAngle={180} 
                      endAngle={0}
                    >
                      <RadialBar minAngle={15} background clockWise={true} dataKey="value" />
                      <Legend />
                      <Tooltip />
                    </RadialBarChart>
                  </ResponsiveContainer>
                </div>
              </CardContent>
            </Card>
          </TabsContent>
        </Tabs>
      </div>
    </div>
  );
};

export default Dashboard;
